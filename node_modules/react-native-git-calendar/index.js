/**
 * Created by git on 17/3/14.
 * @flow
 */

'use strict';

import React, {PropTypes} from 'react';
import {View, StyleSheet, Text, TouchableOpacity, Image, Dimensions, Platform} from 'react-native';
import {PagerTabIndicator, IndicatorViewPager, PagerTitleIndicator, PagerDotIndicator} from 'rn-viewpager';
import DateBoard from './DateBoard'
const Width = Dimensions.get('window').width
class Calendar extends React.Component
{
    constructor(props, context)
    {
        super(props, context);

        this.state={
            currentYear : new Date().getFullYear(),
            currentMonth : ( new Date().getMonth() )+1 ,
            currentDay : new Date().getDate(),
        }
        this._onPageSelected = this._onPageSelected.bind(this)
        this.nextMonth = this.nextMonth.bind(this)
        this.prev = this.prev.bind(this)
        this._changeCurrent = this._changeCurrent.bind(this)
    }

    render()
    {
        let {currentYear, currentMonth, currentDay} = this.state
        let {busyDay, busyDayColor, selectedColor} = this.props
        return (
            <View style={[styles.container,this.props.style]}>
                <View style={styles.topView}>
                    <Text style={[styles.topTitle,{width:120}]}>{currentYear + '年' + currentMonth + '月'+ currentDay + '日'}</Text>
                </View>
                <View style={styles.titleView}>
                    <Text style={styles.topTitle}>日</Text>
                    <Text style={styles.topTitle}>一</Text>
                    <Text style={styles.topTitle}>二</Text>
                    <Text style={styles.topTitle}>三</Text>
                    <Text style={styles.topTitle}>四</Text>
                    <Text style={styles.topTitle}>五</Text>
                    <Text style={styles.topTitle}>六</Text>
                </View>
                <IndicatorViewPager onPageSelected={(event)=>this._onPageSelected(event)}
                                    initialPage={1}
                                    ref="trueViewPager"
                                    style={{flex:1}}>
                    <Page year={currentYear} month={currentMonth - 1} day={0} busyDay={busyDay} selectedColor={selectedColor}/>
                    <Page year={currentYear} month={currentMonth} day={currentDay} selectedColor={selectedColor}
                          changeCurrent={this._changeCurrent}
                          navigator={this.props.navigator}
                         />
                    <Page year={currentYear} month={currentMonth + 1} day={0} busyDay={busyDay} selectedColor={selectedColor}/>
                </IndicatorViewPager>
            </View>
        );
    }
    flag = 1
    _onPageSelected(event){     //左右滑动时默认跳回第一页,保证循环
        if(Platform.OS === 'ios'){
            if (event.position == 2 && this.flag ===1) {
                this.flag = 0
                this.nextMonth()
            }
            if (event.position == 0 && this.flag ===1) {
                this.flag = 0
                this.prev()
            }
            if (event.position == 1) {
                this.flag = 1
            }
            this.refs.trueViewPager.setPageWithoutAnimation(1)
        }else{
            if (event.position == 2 ) {
                this.nextMonth()
            }
            if (event.position == 0 ) {
                this.prev()
            }
            this.refs.trueViewPager.setPageWithoutAnimation(1)
        }

    }
    //下一个月
    nextMonth(){
        if(this.state.currentMonth === 12){
            this.setState({currentYear:this.state.currentYear+1,currentMonth:1})
        }else{
            this.setState({currentMonth:this.state.currentMonth+1})
        }
    }
    //上一个月
    prev(){
        if(this.state.currentMonth === 1){
            this.setState({currentYear:this.state.currentYear-1,currentMonth:12})
        }else{
            this.setState({currentMonth:this.state.currentMonth-1})
        }
    }
    //得到当前的年月日
    _changeCurrent(Year,Month,Day){
        this.setState({
            currentYear : Year,
            currentMonth : Month,
            currentDay : Day,
        })
    }

}

class Page extends React.Component {
    constructor(props, context)
    {
        super(props, context);
        this._onPress = this._onPress.bind(this)

        this.state={
            currentDay : props.day,
            currentYear : props.year,
            currentMonth : props.month
        }
    }
    componentWillReceiveProps(nextProps) {
        /**
         * 点击日期或者切换月份时判断当前选择那天是否是忙日
         * */
        let {currentYear, currentMonth} = this.state
        if(currentYear === nextProps.year && currentMonth === nextProps.month){

        }else{
            this.setState({currentYear:nextProps.year,currentMonth : nextProps.month})
        }
    }
    render(){
        let {year,month,day} = this.props    //初始化年月日
        let {currentDay} = this.state   //被选择的日 , 当日的事件 , 所有的忙日
        let {selectedColor} = this.props
        let fd = new Date(year, month -1, 1);
        this._firstDay = fd.getDay(); //返回表示星期的某一天的数字
        return (
            <View style={styles.container}>
                <DateBoard year={year} month={month} day={day}
                           onPress={(Year,Month,Day)=>this._onPress(Year,Month,Day)}
                           selectedDay={currentDay}
                           selectedColor={selectedColor}
                />
            </View>
        )
    }

    _onPress(Year,Month,Day){
        /**
         * 点击了某天
         * **/
        this.setState({currentDay:Day})
        this.props.changeCurrent && this.props.changeCurrent(Year,Month,Day)
    }

}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor:'#fff',
    },
    topView:{
        flexDirection:'row',
        justifyContent:'center',
        alignItems:'center',
        backgroundColor:'#000',
        height:40
    },
    topTitle:{
        fontSize:14,
        color:'#fff',
        width:Width / 7 -0.5,
        textAlign:'center'
    },
    titleView:{
        flexDirection:'row',
        alignItems:'center',
        backgroundColor:'#000',
        height:20,
    },
});
export default Calendar;